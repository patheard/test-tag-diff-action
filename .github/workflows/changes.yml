name: "Test change detection"

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:

  get-versions:
    runs-on: ubuntu-latest
    outputs:
      current: ${{ steps.get-versions.outputs.current }}
      target: ${{ steps.get-versions.outputs.target }}      
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
 
      - name: Get version
        id: get-versions
        run: |
          CURRENT_SHA="$(git show -2 --pretty=format:"%h" --no-patch VERSION | tail -n 1)"
          CURRENT="$(git show ${CURRENT_SHA}:VERSION)"
          TARGET="$(cat VERSION)"          
          echo "::set-output name=target::v${TARGET}"
          echo "::set-output name=current::v${CURRENT}"

  changes:
    needs: get-versions
    runs-on: ubuntu-latest
    env:
      CURRENT: ${{ needs.get-versions.outputs.current }}
      TARGET: ${{ needs.get-versions.outputs.target }}
    steps:

      - name: Sanity test
        run: |
          echo "Current is ${{ env.CURRENT }}"
          echo "Target is ${{ env.TARGET }}"

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ env.TARGET }}

      - uses: cds-snc/paths-filter@6a46d6ba2334bcb1cd4a52e4e9a043a59fb6b855 # latest
        id: filter
        with:
          ref: ${{ env.TARGET }}
          base: ${{ env.CURRENT }}
          filters: |
            readme:
              - 'README.md'

      - name: Changes?
        if: ${{ steps.filter.outputs.readme == 'true' }}
        run: echo "README.md changed"
